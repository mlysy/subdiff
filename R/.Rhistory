sort(NULL)
q()
testthat::test_package("subdiff")
prony.lmsd
devtools::document()
devtools::document()
devtools::install()
q()
t0
coef
coeff
lambda
rC
rouse.msd
prony.msd
prony.lmsd
prony.msd
lmsd
lmsd2
lmsd
lmsd2
lmsd.fun(u0)
)
cut
cutoff
optimize
rouse.msd
debug(.init.tScale)
lmsdp
c
lmsdp
tScale
lmsdp
tScale
lmsdp
cutoff
tScale
lmsdp
tScale
.prony.lmsd(6e-4, r, C)
.prony.lmsd(6e-5, r, C)
Q
devtools::document()
devtools::document()
devtools::document()
devtools::install()
q)(
q()
devtools::install()
lmsd
debug(subdiff:::.init.tScale)
tScale
abline(v = tScale, lty = 2)
lmsdp
cutoff
tScale
tScale
lmsdp
abline(v = tScale, lty = 2, col = "red")
lmsdp
.prony.lmsd(2.69e-2, r, C)
.prony.lmsd(2.69e-3, r, C)
lmsd
tseq
tScale
lmsdp
tScale
lmsdp
lmsdp
abline(h = lsdmp[1])
abline(h = lmsdp[1])
Q
undebug(subdiff:::.init.tScale)
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
sHat
alpha
sHat["alpha"]-alpha
devtools::document()
devtools::install()
sHat
sHat
K
head(msd/msd2)
K
rouse.msd
head(msd/msd2)
1/K
rouse.msd
devtools::install()
crouse
crouse.msd
par(mfrow = c(1,1))
sHat
sHat
sHat
acf
rm(dt)
dSnorm
gpar
alpha
tau
gpar
sEst
subEst
sHat
args(rouse.acf)
cpar
cpar
tau
sHat
gpar
cpar
sHat
gpar
lmm.suff
lmn.suff
)
rouse.fmsd
debug(rouse.fmsd)
theta
Q
undebug(rouse.fmsd)
alpha
sHat
fbm.acf
fbm.msd
?fbm.msd
devtools::document()
devtools::install()
fbm.acf
fpar
alpha
fpar
sHat
sHat
cpar
alpha
?while
ii
ii
sHat
sHat
q()
