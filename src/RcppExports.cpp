// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// log1pe
NumericVector log1pe(NumericVector x);
RcppExport SEXP _subdiff_log1pe(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(log1pe(x));
    return rcpp_result_gen;
END_RCPP
}
// ls_var
Eigen::MatrixXd ls_var(double alpha, Eigen::VectorXd lags, int N);
RcppExport SEXP _subdiff_ls_var(SEXP alphaSEXP, SEXP lagsSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type lags(lagsSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(ls_var(alpha, lags, N));
    return rcpp_result_gen;
END_RCPP
}
// mode_poly
NumericVector mode_poly(NumericVector roots, int n_iter, double tol);
RcppExport SEXP _subdiff_mode_poly(SEXP rootsSEXP, SEXP n_iterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type roots(rootsSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(mode_poly(roots, n_iter, tol));
    return rcpp_result_gen;
END_RCPP
}
// msd_empirical
NumericVector msd_empirical(NumericMatrix Xt, int n_lag);
RcppExport SEXP _subdiff_msd_empirical(SEXP XtSEXP, SEXP n_lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xt(XtSEXP);
    Rcpp::traits::input_parameter< int >::type n_lag(n_lagSEXP);
    rcpp_result_gen = Rcpp::wrap(msd_empirical(Xt, n_lag));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_subdiff_log1pe", (DL_FUNC) &_subdiff_log1pe, 1},
    {"_subdiff_ls_var", (DL_FUNC) &_subdiff_ls_var, 3},
    {"_subdiff_mode_poly", (DL_FUNC) &_subdiff_mode_poly, 3},
    {"_subdiff_msd_empirical", (DL_FUNC) &_subdiff_msd_empirical, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_subdiff(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
