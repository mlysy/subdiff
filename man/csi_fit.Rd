% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/csi_fit.R
\name{csi_fit}
\alias{csi_fit}
\title{Fit the location-scale model for Gaussian CSI process.}
\usage{
csi_fit(model, dX, dt, Tz, vcov)
}
\arguments{
\item{model}{An list of class \code{csi_class} (see \code{\link[=fbm_model]{fbm_model()}}, \code{\link[=floc_model]{floc_model()}}, \code{\link[=farma_model]{farma_model()}}).}

\item{dX}{One or two-column matrix of increments. Increments of Gaussian CSI processes.}

\item{dt}{Interobservation time \eqn{\Delta t} = 1/fps (positive scalar).}

\item{Tz}{Optional object of class \code{Toeplitz} for intermediate calculations (See \code{\link[SuperGauss:Toeplitz]{SuperGauss::Toeplitz()}}).}

\item{var_calc}{Logical; if \code{TRUE}, also estimate the variance matrix.}
}
\value{
A vector of estimated parameters on transformed scale (See \code{\link[=farma_model]{farma_model()}}, \code{\link[=fbm_model]{fbm_model()}}, \code{\link[=floc_model]{floc_model()}}). If \code{var_calc = TRUE}, a list with components:
\describe{
\item{\code{coef}}{A vector of estimated parameters on transformed scale.}
\item{\code{vcov}}{A matrix of estimated covariance of parameters on transformed scale.}
}
}
\description{
Estimate the coefficients and their covariance for parameters in location-scale model where target data follows Gaussian CSI process (See \strong{Details}).
}
\details{
The location-scale model is of following form
\deqn{
X_n = \mu n \Delta t + \Sigma^{1/2} Z_n
}{
X[n] = \mu n \Delta t + \Sigma^{1/2} Z[n]
}
where \eqn{\mu} is the drift parameter, \eqn{\Sigma} is the between-trajectory covariance and \eqn{Z_n}{Z[n]} is a Gaussian continuous-stationary-increment (CSI) process.

In the location-scale model, \eqn{\mu, \Sigma} are nuisance parameters and can be profiled out using function \code{\link[LMN:lmn_prof]{LMN::lmn_prof()}}.
}
\examples{
# generating 2-d stationary time series
alpha <- 0.8
dt <- 1/60
N <- 1800
acf1 <- fbm_acf(alpha, dt, N)
dX <- rSnorm(2, acf = acf1)
# Toeplitz object for internal computation
Tz <- Toeplitz(n = N)
# generate a fBM model object
model <- fbm_model()
# fit the fBM model
csi_fit(model, dX, dt, Tz, vcov = TRUE)
}
\references{
Lysy, M., Pillai, N.S., Hill, D.B., Forest, M.G., Mellnik, J.W.R., Vasquez, P.A., and McKinley, S.A. "Model comparison and assessment for single particle tracking in biological fluids." \emph{Journal of the American Statistical Association} 111.516 (2016): 1413-1426. \url{https://doi.org/10.1080/01621459.2016.1158716}.
}
